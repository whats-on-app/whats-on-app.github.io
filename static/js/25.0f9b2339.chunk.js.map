{"version":3,"sources":["../../src/observe.ts","../../src/InView.tsx","../../src/useInView.tsx","../node_modules/decode-uri-component/index.js","../node_modules/split-on-first/index.js","../node_modules/filter-obj/index.js","../node_modules/query-string/base.js","../node_modules/query-string/index.js"],"names":["observerMap","Map","RootIds","WeakMap","rootId","unsupportedValue","undefined","optionsToId","options","Object","keys","sort","filter","key","map","root","has","set","toString","get","observe","element","callback","fallbackInView","window","IntersectionObserver","bounds","getBoundingClientRect","isIntersecting","target","intersectionRatio","threshold","time","boundingClientRect","intersectionRect","rootBounds","createObserver","id","instance","thresholds","elements","observer","entries","forEach","entry","inView","some","trackVisibility","isVisible","Array","isArray","callbacks","push","splice","indexOf","length","unobserve","size","disconnect","isPlainChildren","props","children","InView","node","_unobserveCb","handleNode","triggerOnce","skip","setState","initialInView","observeNode","handleChange","onChange","state","componentDidUpdate","prevProps","rootMargin","this","delay","componentWillUnmount","render","ref","as","React","useInView","setRef","current","useEffect","result","displayName","defaultProps","singleMatcher","RegExp","multiMatcher","decodeComponents","components","split","decodeURIComponent","join","left","slice","right","prototype","concat","call","decode","input","tokens","match","i","decodeUriComponent","encodedURI","TypeError","replaceMap","exec","replace","customDecodeURIComponent","splitOnFirst","string","separator","separatorIndex","includeKeys","object","predicate","descriptor","getOwnPropertyDescriptor","enumerable","defineProperty","Reflect","ownKeys","encodeFragmentIdentifier","Symbol","validateArrayFormatSeparator","value","encode","strict","encodeURIComponent","x","charCodeAt","toUpperCase","decodeComponent","removeHash","hashStart","parseValue","parseNumbers","Number","isNaN","trim","parseBooleans","toLowerCase","extract","queryStart","parse","query","arrayFormat","arrayFormatSeparator","formatter","accumulator","includes","isEncodedArray","newValue","item","test","arrayValue","flat","parserForArrayFormat","returnValue","create","parameter","parameter_","key2","value2","reduce","Boolean","keysSorter","a","b","stringify","shouldFilter","skipNull","skipEmptyString","index","keyValueSep","encoderForArrayFormat","objectCopy","parseUrl","url","_url_$split$","_url_","_url_$split","url_","hash","parseFragmentIdentifier","fragmentIdentifier","stringifyUrl","queryString","getHash","urlObjectForFragmentEncode","URL","pick","exclude"],"mappings":"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","file":"static/js/25.0f9b2339.chunk.js","sourcesContent":["import { ObserverInstanceCallback } from './index';\n\nconst observerMap = new Map<\n  string,\n  {\n    id: string;\n    observer: IntersectionObserver;\n    elements: Map<Element, Array<ObserverInstanceCallback>>;\n  }\n>();\n\nconst RootIds: WeakMap<Element | Document, string> = new WeakMap();\nlet rootId = 0;\n\nlet unsupportedValue: boolean | undefined = undefined;\n\n/**\n * What should be the default behavior if the IntersectionObserver is unsupported?\n * Ideally the polyfill has been loaded, you can have the following happen:\n * - `undefined`: Throw an error\n * - `true` or `false`: Set the `inView` value to this regardless of intersection state\n * **/\nexport function defaultFallbackInView(inView: boolean | undefined) {\n  unsupportedValue = inView;\n}\n\n/**\n * Generate a unique ID for the root element\n * @param root\n */\nfunction getRootId(root: IntersectionObserverInit['root']) {\n  if (!root) return '0';\n  if (RootIds.has(root)) return RootIds.get(root);\n  rootId += 1;\n  RootIds.set(root, rootId.toString());\n  return RootIds.get(root);\n}\n\n/**\n * Convert the options to a string Id, based on the values.\n * Ensures we can reuse the same observer when observing elements with the same options.\n * @param options\n */\nexport function optionsToId(options: IntersectionObserverInit) {\n  return Object.keys(options)\n    .sort()\n    .filter((key) => options[key] !== undefined)\n    .map((key) => {\n      return `${key}_${\n        key === 'root' ? getRootId(options.root) : options[key]\n      }`;\n    })\n    .toString();\n}\n\nfunction createObserver(options: IntersectionObserverInit) {\n  // Create a unique ID for this observer instance, based on the root, root margin and threshold.\n  let id = optionsToId(options);\n  let instance = observerMap.get(id);\n\n  if (!instance) {\n    // Create a map of elements this observer is going to observe. Each element has a list of callbacks that should be triggered, once it comes into view.\n    const elements = new Map<Element, Array<ObserverInstanceCallback>>();\n    let thresholds: number[] | readonly number[];\n\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        // While it would be nice if you could just look at isIntersecting to determine if the component is inside the viewport, browsers can't agree on how to use it.\n        // -Firefox ignores `threshold` when considering `isIntersecting`, so it will never be false again if `threshold` is > 0\n        const inView =\n          entry.isIntersecting &&\n          thresholds.some((threshold) => entry.intersectionRatio >= threshold);\n\n        // @ts-ignore support IntersectionObserver v2\n        if (options.trackVisibility && typeof entry.isVisible === 'undefined') {\n          // The browser doesn't support Intersection Observer v2, falling back to v1 behavior.\n          // @ts-ignore\n          entry.isVisible = inView;\n        }\n\n        elements.get(entry.target)?.forEach((callback) => {\n          callback(inView, entry);\n        });\n      });\n    }, options);\n\n    // Ensure we have a valid thresholds array. If not, use the threshold from the options\n    thresholds =\n      observer.thresholds ||\n      (Array.isArray(options.threshold)\n        ? options.threshold\n        : [options.threshold || 0]);\n\n    instance = {\n      id,\n      observer,\n      elements,\n    };\n\n    observerMap.set(id, instance);\n  }\n\n  return instance;\n}\n\n/**\n * @param element - DOM Element to observe\n * @param callback - Callback function to trigger when intersection status changes\n * @param options - Intersection Observer options\n * @param fallbackInView - Fallback inView value.\n * @return Function - Cleanup function that should be triggered to unregister the observer\n */\nexport function observe(\n  element: Element,\n  callback: ObserverInstanceCallback,\n  options: IntersectionObserverInit = {},\n  fallbackInView = unsupportedValue,\n) {\n  if (\n    typeof window.IntersectionObserver === 'undefined' &&\n    fallbackInView !== undefined\n  ) {\n    const bounds = element.getBoundingClientRect();\n    callback(fallbackInView, {\n      isIntersecting: fallbackInView,\n      target: element,\n      intersectionRatio:\n        typeof options.threshold === 'number' ? options.threshold : 0,\n      time: 0,\n      boundingClientRect: bounds,\n      intersectionRect: bounds,\n      rootBounds: bounds,\n    });\n    return () => {\n      // Nothing to cleanup\n    };\n  }\n  // An observer with the same options can be reused, so lets use this fact\n  const { id, observer, elements } = createObserver(options);\n\n  // Register the callback listener for this element\n  let callbacks = elements.get(element) || [];\n  if (!elements.has(element)) {\n    elements.set(element, callbacks);\n  }\n\n  callbacks.push(callback);\n  observer.observe(element);\n\n  return function unobserve() {\n    // Remove the callback from the callback list\n    callbacks.splice(callbacks.indexOf(callback), 1);\n\n    if (callbacks.length === 0) {\n      // No more callback exists for element, so destroy it\n      elements.delete(element);\n      observer.unobserve(element);\n    }\n\n    if (elements.size === 0) {\n      // No more elements are being observer by this instance, so destroy it\n      observer.disconnect();\n      observerMap.delete(id);\n    }\n  };\n}\n","import * as React from 'react';\nimport { IntersectionObserverProps, PlainChildrenProps } from './index';\nimport { observe } from './observe';\n\ntype State = {\n  inView: boolean;\n  entry?: IntersectionObserverEntry;\n};\n\nfunction isPlainChildren(\n  props: IntersectionObserverProps | PlainChildrenProps,\n): props is PlainChildrenProps {\n  return typeof props.children !== 'function';\n}\n\n/**\n ## Render props\n\n To use the `<InView>` component, you pass it a function. It will be called\n whenever the state changes, with the new value of `inView`. In addition to the\n `inView` prop, children also receive a `ref` that should be set on the\n containing DOM element. This is the element that the IntersectionObserver will\n monitor.\n\n If you need it, you can also access the\n [`IntersectionObserverEntry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry)\n on `entry`, giving you access to all the details about the current intersection\n state.\n\n ```jsx\n import { InView } from 'react-intersection-observer';\n\n const Component = () => (\n <InView>\n {({ inView, ref, entry }) => (\n      <div ref={ref}>\n        <h2>{`Header inside viewport ${inView}.`}</h2>\n      </div>\n    )}\n </InView>\n );\n\n export default Component;\n ```\n\n ## Plain children\n\n You can pass any element to the `<InView />`, and it will handle creating the\n wrapping DOM element. Add a handler to the `onChange` method, and control the\n state in your own component. Any extra props you add to `<InView>` will be\n passed to the HTML element, allowing you set the `className`, `style`, etc.\n\n ```jsx\n import { InView } from 'react-intersection-observer';\n\n const Component = () => (\n <InView as=\"div\" onChange={(inView, entry) => console.log('Inview:', inView)}>\n <h2>Plain children are always rendered. Use onChange to monitor state.</h2>\n </InView>\n );\n\n export default Component;\n ```\n */\nexport class InView extends React.Component<\n  IntersectionObserverProps | PlainChildrenProps,\n  State\n> {\n  static displayName = 'InView';\n  static defaultProps = {\n    threshold: 0,\n    triggerOnce: false,\n    initialInView: false,\n  };\n\n  constructor(props: IntersectionObserverProps | PlainChildrenProps) {\n    super(props);\n    this.state = {\n      inView: !!props.initialInView,\n      entry: undefined,\n    };\n  }\n\n  componentDidUpdate(prevProps: IntersectionObserverProps) {\n    // If a IntersectionObserver option changed, reinit the observer\n    if (\n      prevProps.rootMargin !== this.props.rootMargin ||\n      prevProps.root !== this.props.root ||\n      prevProps.threshold !== this.props.threshold ||\n      prevProps.skip !== this.props.skip ||\n      prevProps.trackVisibility !== this.props.trackVisibility ||\n      prevProps.delay !== this.props.delay\n    ) {\n      this.unobserve();\n      this.observeNode();\n    }\n  }\n\n  componentWillUnmount() {\n    this.unobserve();\n    this.node = null;\n  }\n\n  node: Element | null = null;\n  _unobserveCb: (() => void) | null = null;\n\n  observeNode() {\n    if (!this.node || this.props.skip) return;\n    const {\n      threshold,\n      root,\n      rootMargin,\n      trackVisibility,\n      delay,\n      fallbackInView,\n    } = this.props;\n\n    this._unobserveCb = observe(\n      this.node,\n      this.handleChange,\n      {\n        threshold,\n        root,\n        rootMargin,\n        // @ts-ignore\n        trackVisibility,\n        // @ts-ignore\n        delay,\n      },\n      fallbackInView,\n    );\n  }\n\n  unobserve() {\n    if (this._unobserveCb) {\n      this._unobserveCb();\n      this._unobserveCb = null;\n    }\n  }\n\n  handleNode = (node?: Element | null) => {\n    if (this.node) {\n      // Clear the old observer, before we start observing a new element\n      this.unobserve();\n\n      if (!node && !this.props.triggerOnce && !this.props.skip) {\n        // Reset the state if we get a new node, and we aren't ignoring updates\n        this.setState({ inView: !!this.props.initialInView, entry: undefined });\n      }\n    }\n\n    this.node = node ? node : null;\n    this.observeNode();\n  };\n\n  handleChange = (inView: boolean, entry: IntersectionObserverEntry) => {\n    if (inView && this.props.triggerOnce) {\n      // If `triggerOnce` is true, we should stop observing the element.\n      this.unobserve();\n    }\n    if (!isPlainChildren(this.props)) {\n      // Store the current State, so we can pass it to the children in the next render update\n      // There's no reason to update the state for plain children, since it's not used in the rendering.\n      this.setState({ inView, entry });\n    }\n    if (this.props.onChange) {\n      // If the user is actively listening for onChange, always trigger it\n      this.props.onChange(inView, entry);\n    }\n  };\n\n  render() {\n    if (!isPlainChildren(this.props)) {\n      const { inView, entry } = this.state;\n      return this.props.children({ inView, entry, ref: this.handleNode });\n    }\n\n    const {\n      children,\n      as,\n      triggerOnce,\n      threshold,\n      root,\n      rootMargin,\n      onChange,\n      skip,\n      trackVisibility,\n      delay,\n      initialInView,\n      fallbackInView,\n      ...props\n    } = this.props;\n\n    return React.createElement(\n      as || 'div',\n      { ref: this.handleNode, ...props },\n      children,\n    );\n  }\n}\n","import * as React from 'react';\nimport { InViewHookResponse, IntersectionOptions } from './index';\nimport { useEffect } from 'react';\nimport { observe } from './observe';\n\ntype State = {\n  inView: boolean;\n  entry?: IntersectionObserverEntry;\n};\n\n/**\n * React Hooks make it easy to monitor the `inView` state of your components. Call\n * the `useInView` hook with the (optional) [options](#options) you need. It will\n * return an array containing a `ref`, the `inView` status and the current\n * [`entry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry).\n * Assign the `ref` to the DOM element you want to monitor, and the hook will\n * report the status.\n *\n * @example\n * ```jsx\n * import React from 'react';\n * import { useInView } from 'react-intersection-observer';\n *\n * const Component = () => {\n *   const { ref, inView, entry } = useInView({\n *       threshold: 0,\n *   });\n *\n *   return (\n *     <div ref={ref}>\n *       <h2>{`Header inside viewport ${inView}.`}</h2>\n *     </div>\n *   );\n * };\n * ```\n */\nexport function useInView({\n  threshold,\n  delay,\n  trackVisibility,\n  rootMargin,\n  root,\n  triggerOnce,\n  skip,\n  initialInView,\n  fallbackInView,\n}: IntersectionOptions = {}): InViewHookResponse {\n  const unobserve = React.useRef<Function>();\n  const [state, setState] = React.useState<State>({\n    inView: !!initialInView,\n  });\n  const setRef = React.useCallback(\n    (node: Element | null) => {\n      if (unobserve.current !== undefined) {\n        unobserve.current();\n        unobserve.current = undefined;\n      }\n\n      // Skip creating the observer\n      if (skip) return;\n\n      if (node) {\n        unobserve.current = observe(\n          node,\n          (inView, entry) => {\n            setState({ inView, entry });\n\n            if (entry.isIntersecting && triggerOnce && unobserve.current) {\n              // If it should only trigger once, unobserve the element after it's inView\n              unobserve.current();\n              unobserve.current = undefined;\n            }\n          },\n          {\n            root,\n            rootMargin,\n            threshold,\n            // @ts-ignore\n            trackVisibility,\n            // @ts-ignore\n            delay,\n          },\n          fallbackInView,\n        );\n      }\n    },\n    // We break the rule here, because we aren't including the actual `threshold` variable\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n      // If the threshold is an array, convert it to a string so it won't change between renders.\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      Array.isArray(threshold) ? threshold.toString() : threshold,\n      root,\n      rootMargin,\n      triggerOnce,\n      skip,\n      trackVisibility,\n      fallbackInView,\n      delay,\n    ],\n  );\n\n  /* eslint-disable-next-line */\n  useEffect(() => {\n    if (!unobserve.current && state.entry && !triggerOnce && !skip) {\n      // If we don't have a ref, then reset the state (unless the hook is set to only `triggerOnce` or `skip`)\n      // This ensures we correctly reflect the current state - If you aren't observing anything, then nothing is inView\n      setState({\n        inView: !!initialInView,\n      });\n    }\n  });\n\n  const result = [setRef, state.inView, state.entry] as InViewHookResponse;\n\n  // Support object destructuring, by adding the specific values.\n  result.ref = result[0];\n  result.inView = result[1];\n  result.entry = result[2];\n\n  return result;\n}\n","const token = '%[a-f0-9]{2}';\nconst singleMatcher = new RegExp('(' + token + ')|([^%]+?)', 'gi');\nconst multiMatcher = new RegExp('(' + token + ')+', 'gi');\n\nfunction decodeComponents(components, split) {\n\ttry {\n\t\t// Try to decode the entire string first\n\t\treturn [decodeURIComponent(components.join(''))];\n\t} catch {\n\t\t// Do nothing\n\t}\n\n\tif (components.length === 1) {\n\t\treturn components;\n\t}\n\n\tsplit = split || 1;\n\n\t// Split the array in 2 parts\n\tconst left = components.slice(0, split);\n\tconst right = components.slice(split);\n\n\treturn Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));\n}\n\nfunction decode(input) {\n\ttry {\n\t\treturn decodeURIComponent(input);\n\t} catch {\n\t\tlet tokens = input.match(singleMatcher) || [];\n\n\t\tfor (let i = 1; i < tokens.length; i++) {\n\t\t\tinput = decodeComponents(tokens, i).join('');\n\n\t\t\ttokens = input.match(singleMatcher) || [];\n\t\t}\n\n\t\treturn input;\n\t}\n}\n\nfunction customDecodeURIComponent(input) {\n\t// Keep track of all the replacements and prefill the map with the `BOM`\n\tconst replaceMap = {\n\t\t'%FE%FF': '\\uFFFD\\uFFFD',\n\t\t'%FF%FE': '\\uFFFD\\uFFFD',\n\t};\n\n\tlet match = multiMatcher.exec(input);\n\twhile (match) {\n\t\ttry {\n\t\t\t// Decode as big chunks as possible\n\t\t\treplaceMap[match[0]] = decodeURIComponent(match[0]);\n\t\t} catch {\n\t\t\tconst result = decode(match[0]);\n\n\t\t\tif (result !== match[0]) {\n\t\t\t\treplaceMap[match[0]] = result;\n\t\t\t}\n\t\t}\n\n\t\tmatch = multiMatcher.exec(input);\n\t}\n\n\t// Add `%C2` at the end of the map to make sure it does not replace the combinator before everything else\n\treplaceMap['%C2'] = '\\uFFFD';\n\n\tconst entries = Object.keys(replaceMap);\n\n\tfor (const key of entries) {\n\t\t// Replace all decoded components\n\t\tinput = input.replace(new RegExp(key, 'g'), replaceMap[key]);\n\t}\n\n\treturn input;\n}\n\nexport default function decodeUriComponent(encodedURI) {\n\tif (typeof encodedURI !== 'string') {\n\t\tthrow new TypeError('Expected `encodedURI` to be of type `string`, got `' + typeof encodedURI + '`');\n\t}\n\n\ttry {\n\t\t// Try the built in decoder first\n\t\treturn decodeURIComponent(encodedURI);\n\t} catch {\n\t\t// Fallback to a more advanced decoder\n\t\treturn customDecodeURIComponent(encodedURI);\n\t}\n}\n","export default function splitOnFirst(string, separator) {\n\tif (!(typeof string === 'string' && typeof separator === 'string')) {\n\t\tthrow new TypeError('Expected the arguments to be of type `string`');\n\t}\n\n\tif (string === '' || separator === '') {\n\t\treturn [];\n\t}\n\n\tconst separatorIndex = string.indexOf(separator);\n\n\tif (separatorIndex === -1) {\n\t\treturn [];\n\t}\n\n\treturn [\n\t\tstring.slice(0, separatorIndex),\n\t\tstring.slice(separatorIndex + separator.length)\n\t];\n}\n","export function includeKeys(object, predicate) {\n\tconst result = {};\n\n\tif (Array.isArray(predicate)) {\n\t\tfor (const key of predicate) {\n\t\t\tconst descriptor = Object.getOwnPropertyDescriptor(object, key);\n\t\t\tif (descriptor?.enumerable) {\n\t\t\t\tObject.defineProperty(result, key, descriptor);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// `Reflect.ownKeys()` is required to retrieve symbol properties\n\t\tfor (const key of Reflect.ownKeys(object)) {\n\t\t\tconst descriptor = Object.getOwnPropertyDescriptor(object, key);\n\t\t\tif (descriptor.enumerable) {\n\t\t\t\tconst value = object[key];\n\t\t\t\tif (predicate(key, value, object)) {\n\t\t\t\t\tObject.defineProperty(result, key, descriptor);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn result;\n}\n\nexport function excludeKeys(object, predicate) {\n\tif (Array.isArray(predicate)) {\n\t\tconst set = new Set(predicate);\n\t\treturn includeKeys(object, key => !set.has(key));\n\t}\n\n\treturn includeKeys(object, (key, value, object) => !predicate(key, value, object));\n}\n","import decodeComponent from 'decode-uri-component';\nimport splitOnFirst from 'split-on-first';\nimport {includeKeys} from 'filter-obj';\n\nconst isNullOrUndefined = value => value === null || value === undefined;\n\n// eslint-disable-next-line unicorn/prefer-code-point\nconst strictUriEncode = string => encodeURIComponent(string).replace(/[!'()*]/g, x => `%${x.charCodeAt(0).toString(16).toUpperCase()}`);\n\nconst encodeFragmentIdentifier = Symbol('encodeFragmentIdentifier');\n\nfunction encoderForArrayFormat(options) {\n\tswitch (options.arrayFormat) {\n\t\tcase 'index': {\n\t\t\treturn key => (result, value) => {\n\t\t\t\tconst index = result.length;\n\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t...result, [encode(key, options), '[', index, ']'].join(''),\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '[', encode(index, options), ']=', encode(value, options)].join(''),\n\t\t\t\t];\n\t\t\t};\n\t\t}\n\n\t\tcase 'bracket': {\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t...result,\n\t\t\t\t\t\t[encode(key, options), '[]'].join(''),\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '[]=', encode(value, options)].join(''),\n\t\t\t\t];\n\t\t\t};\n\t\t}\n\n\t\tcase 'colon-list-separator': {\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t...result,\n\t\t\t\t\t\t[encode(key, options), ':list='].join(''),\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), ':list=', encode(value, options)].join(''),\n\t\t\t\t];\n\t\t\t};\n\t\t}\n\n\t\tcase 'comma':\n\t\tcase 'separator':\n\t\tcase 'bracket-separator': {\n\t\t\tconst keyValueSep = options.arrayFormat === 'bracket-separator'\n\t\t\t\t? '[]='\n\t\t\t\t: '=';\n\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\t// Translate null to an empty string so that it doesn't serialize as 'null'\n\t\t\t\tvalue = value === null ? '' : value;\n\n\t\t\t\tif (result.length === 0) {\n\t\t\t\t\treturn [[encode(key, options), keyValueSep, encode(value, options)].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [[result, encode(value, options)].join(options.arrayFormatSeparator)];\n\t\t\t};\n\t\t}\n\n\t\tdefault: {\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t...result,\n\t\t\t\t\t\tencode(key, options),\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '=', encode(value, options)].join(''),\n\t\t\t\t];\n\t\t\t};\n\t\t}\n\t}\n}\n\nfunction parserForArrayFormat(options) {\n\tlet result;\n\n\tswitch (options.arrayFormat) {\n\t\tcase 'index': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /\\[(\\d*)]$/.exec(key);\n\n\t\t\t\tkey = key.replace(/\\[\\d*]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = {};\n\t\t\t\t}\n\n\t\t\t\taccumulator[key][result[1]] = value;\n\t\t\t};\n\t\t}\n\n\t\tcase 'bracket': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(\\[])$/.exec(key);\n\t\t\t\tkey = key.replace(/\\[]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [...accumulator[key], value];\n\t\t\t};\n\t\t}\n\n\t\tcase 'colon-list-separator': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(:list)$/.exec(key);\n\t\t\t\tkey = key.replace(/:list$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [...accumulator[key], value];\n\t\t\t};\n\t\t}\n\n\t\tcase 'comma':\n\t\tcase 'separator': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = typeof value === 'string' && value.includes(options.arrayFormatSeparator);\n\t\t\t\tconst isEncodedArray = (typeof value === 'string' && !isArray && decode(value, options).includes(options.arrayFormatSeparator));\n\t\t\t\tvalue = isEncodedArray ? decode(value, options) : value;\n\t\t\t\tconst newValue = isArray || isEncodedArray ? value.split(options.arrayFormatSeparator).map(item => decode(item, options)) : (value === null ? value : decode(value, options));\n\t\t\t\taccumulator[key] = newValue;\n\t\t\t};\n\t\t}\n\n\t\tcase 'bracket-separator': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = /(\\[])$/.test(key);\n\t\t\t\tkey = key.replace(/\\[]$/, '');\n\n\t\t\t\tif (!isArray) {\n\t\t\t\t\taccumulator[key] = value ? decode(value, options) : value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst arrayValue = value === null\n\t\t\t\t\t? []\n\t\t\t\t\t: value.split(options.arrayFormatSeparator).map(item => decode(item, options));\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = arrayValue;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [...accumulator[key], ...arrayValue];\n\t\t\t};\n\t\t}\n\n\t\tdefault: {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [...[accumulator[key]].flat(), value];\n\t\t\t};\n\t\t}\n\t}\n}\n\nfunction validateArrayFormatSeparator(value) {\n\tif (typeof value !== 'string' || value.length !== 1) {\n\t\tthrow new TypeError('arrayFormatSeparator must be single character string');\n\t}\n}\n\nfunction encode(value, options) {\n\tif (options.encode) {\n\t\treturn options.strict ? strictUriEncode(value) : encodeURIComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction decode(value, options) {\n\tif (options.decode) {\n\t\treturn decodeComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction keysSorter(input) {\n\tif (Array.isArray(input)) {\n\t\treturn input.sort();\n\t}\n\n\tif (typeof input === 'object') {\n\t\treturn keysSorter(Object.keys(input))\n\t\t\t.sort((a, b) => Number(a) - Number(b))\n\t\t\t.map(key => input[key]);\n\t}\n\n\treturn input;\n}\n\nfunction removeHash(input) {\n\tconst hashStart = input.indexOf('#');\n\tif (hashStart !== -1) {\n\t\tinput = input.slice(0, hashStart);\n\t}\n\n\treturn input;\n}\n\nfunction getHash(url) {\n\tlet hash = '';\n\tconst hashStart = url.indexOf('#');\n\tif (hashStart !== -1) {\n\t\thash = url.slice(hashStart);\n\t}\n\n\treturn hash;\n}\n\nfunction parseValue(value, options) {\n\tif (options.parseNumbers && !Number.isNaN(Number(value)) && (typeof value === 'string' && value.trim() !== '')) {\n\t\tvalue = Number(value);\n\t} else if (options.parseBooleans && value !== null && (value.toLowerCase() === 'true' || value.toLowerCase() === 'false')) {\n\t\tvalue = value.toLowerCase() === 'true';\n\t}\n\n\treturn value;\n}\n\nexport function extract(input) {\n\tinput = removeHash(input);\n\tconst queryStart = input.indexOf('?');\n\tif (queryStart === -1) {\n\t\treturn '';\n\t}\n\n\treturn input.slice(queryStart + 1);\n}\n\nexport function parse(query, options) {\n\toptions = {\n\t\tdecode: true,\n\t\tsort: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ',',\n\t\tparseNumbers: false,\n\t\tparseBooleans: false,\n\t\t...options,\n\t};\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst formatter = parserForArrayFormat(options);\n\n\t// Create an object with no prototype\n\tconst returnValue = Object.create(null);\n\n\tif (typeof query !== 'string') {\n\t\treturn returnValue;\n\t}\n\n\tquery = query.trim().replace(/^[?#&]/, '');\n\n\tif (!query) {\n\t\treturn returnValue;\n\t}\n\n\tfor (const parameter of query.split('&')) {\n\t\tif (parameter === '') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst parameter_ = options.decode ? parameter.replace(/\\+/g, ' ') : parameter;\n\n\t\tlet [key, value] = splitOnFirst(parameter_, '=');\n\n\t\tif (key === undefined) {\n\t\t\tkey = parameter_;\n\t\t}\n\n\t\t// Missing `=` should be `null`:\n\t\t// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\t\tvalue = value === undefined ? null : (['comma', 'separator', 'bracket-separator'].includes(options.arrayFormat) ? value : decode(value, options));\n\t\tformatter(decode(key, options), value, returnValue);\n\t}\n\n\tfor (const [key, value] of Object.entries(returnValue)) {\n\t\tif (typeof value === 'object' && value !== null) {\n\t\t\tfor (const [key2, value2] of Object.entries(value)) {\n\t\t\t\tvalue[key2] = parseValue(value2, options);\n\t\t\t}\n\t\t} else {\n\t\t\treturnValue[key] = parseValue(value, options);\n\t\t}\n\t}\n\n\tif (options.sort === false) {\n\t\treturn returnValue;\n\t}\n\n\t// TODO: Remove the use of `reduce`.\n\t// eslint-disable-next-line unicorn/no-array-reduce\n\treturn (options.sort === true ? Object.keys(returnValue).sort() : Object.keys(returnValue).sort(options.sort)).reduce((result, key) => {\n\t\tconst value = returnValue[key];\n\t\tresult[key] = Boolean(value) && typeof value === 'object' && !Array.isArray(value) ? keysSorter(value) : value;\n\t\treturn result;\n\t}, Object.create(null));\n}\n\nexport function stringify(object, options) {\n\tif (!object) {\n\t\treturn '';\n\t}\n\n\toptions = {encode: true,\n\t\tstrict: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ',', ...options};\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst shouldFilter = key => (\n\t\t(options.skipNull && isNullOrUndefined(object[key]))\n\t\t|| (options.skipEmptyString && object[key] === '')\n\t);\n\n\tconst formatter = encoderForArrayFormat(options);\n\n\tconst objectCopy = {};\n\n\tfor (const [key, value] of Object.entries(object)) {\n\t\tif (!shouldFilter(key)) {\n\t\t\tobjectCopy[key] = value;\n\t\t}\n\t}\n\n\tconst keys = Object.keys(objectCopy);\n\n\tif (options.sort !== false) {\n\t\tkeys.sort(options.sort);\n\t}\n\n\treturn keys.map(key => {\n\t\tconst value = object[key];\n\n\t\tif (value === undefined) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (value === null) {\n\t\t\treturn encode(key, options);\n\t\t}\n\n\t\tif (Array.isArray(value)) {\n\t\t\tif (value.length === 0 && options.arrayFormat === 'bracket-separator') {\n\t\t\t\treturn encode(key, options) + '[]';\n\t\t\t}\n\n\t\t\treturn value\n\t\t\t\t.reduce(formatter(key), [])\n\t\t\t\t.join('&');\n\t\t}\n\n\t\treturn encode(key, options) + '=' + encode(value, options);\n\t}).filter(x => x.length > 0).join('&');\n}\n\nexport function parseUrl(url, options) {\n\toptions = {\n\t\tdecode: true,\n\t\t...options,\n\t};\n\n\tlet [url_, hash] = splitOnFirst(url, '#');\n\n\tif (url_ === undefined) {\n\t\turl_ = url;\n\t}\n\n\treturn {\n\t\turl: url_?.split('?')?.[0] ?? '',\n\t\tquery: parse(extract(url), options),\n\t\t...(options && options.parseFragmentIdentifier && hash ? {fragmentIdentifier: decode(hash, options)} : {}),\n\t};\n}\n\nexport function stringifyUrl(object, options) {\n\toptions = {\n\t\tencode: true,\n\t\tstrict: true,\n\t\t[encodeFragmentIdentifier]: true,\n\t\t...options,\n\t};\n\n\tconst url = removeHash(object.url).split('?')[0] || '';\n\tconst queryFromUrl = extract(object.url);\n\n\tconst query = {\n\t\t...parse(queryFromUrl, {sort: false}),\n\t\t...object.query,\n\t};\n\n\tlet queryString = stringify(query, options);\n\tif (queryString) {\n\t\tqueryString = `?${queryString}`;\n\t}\n\n\tlet hash = getHash(object.url);\n\tif (object.fragmentIdentifier) {\n\t\tconst urlObjectForFragmentEncode = new URL(url);\n\t\turlObjectForFragmentEncode.hash = object.fragmentIdentifier;\n\t\thash = options[encodeFragmentIdentifier] ? urlObjectForFragmentEncode.hash : `#${object.fragmentIdentifier}`;\n\t}\n\n\treturn `${url}${queryString}${hash}`;\n}\n\nexport function pick(input, filter, options) {\n\toptions = {\n\t\tparseFragmentIdentifier: true,\n\t\t[encodeFragmentIdentifier]: false,\n\t\t...options,\n\t};\n\n\tconst {url, query, fragmentIdentifier} = parseUrl(input, options);\n\n\treturn stringifyUrl({\n\t\turl,\n\t\tquery: includeKeys(query, filter),\n\t\tfragmentIdentifier,\n\t}, options);\n}\n\nexport function exclude(input, filter, options) {\n\tconst exclusionFilter = Array.isArray(filter) ? key => !filter.includes(key) : (key, value) => !filter(key, value);\n\n\treturn pick(input, exclusionFilter, options);\n}\n","import * as queryString from './base.js';\n\nexport default queryString;\n"],"sourceRoot":""}