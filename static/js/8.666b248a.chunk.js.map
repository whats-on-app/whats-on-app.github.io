{"version":3,"sources":["components/Card/FetchCard.js","components/FavoritesView/index.js","components/Text/index.js","utils/breakpoints.js","utils/pixels.js","utils/above.js","utils/kind.js","components/InfoScreen/index.js","components/AspectRatio/index.js","utils/getRatingsDetails.js","components/Card/index.js"],"names":["FetchCard","_ref","kindURL","id","error","loading","data","useFetch","concat","getKindByURL","process","join","React","createElement","Card","Object","assign","Wrapper","styled","div","_templateObject","_taggedTemplateLiteral","getTitle","length","SearchView","favoritesSet","useFavorites","favorites","useEffect","document","title","Container","Fragment","Text","weight","xs","sm","md","xg","Row","vertical-gutter","style","marginTop","marginBottom","map","favorite","Cell","key","split","InfoScreen","emoji","HeartBreak","size","margin","description","p","color","mapPropsBreakpoints","breakpoints","fn","props","keys","filter","prop","includes","label","above","theme","x","typography","defaultProps","parse","value","arguments","undefined","type","test","parseFloat","stringify","utility","reduce","acc","css","width","_len","args","Array","_key","_templateObject2","__webpack_require__","d","__webpack_exports__","getTitleFromURL","kind","input","source","colors","grey","Emoji","lightGrey","Outer","ratio","Inner","AspectRatio","children","getRatingsDetails","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_config__WEBPACK_IMPORTED_MODULE_1__","allocine_critics_rating","allocine_url","allocine_users_rating","betaseries_url","betaseries_users_rating","imdb_url","imdb_users_rating","letterboxd_url","letterboxd_users_rating","metacritic_critics_rating","metacritic_url","metacritic_users_rating","rottenTomatoes_critics_rating","rottenTomatoes_url","rottenTomatoes_users_rating","senscritique_url","senscritique_users_rating","tmdb_url","tmdb_users_rating","trakt_url","trakt_users_rating","mojo_rank","mojo_url","itemType","detailsConfig","allocine_users","image","name","allocine_critics","betaseries","imdb","metacritic_users","metacritic_critics","rottenTomatoes_users","rottenTomatoes_critics","senscritique","tmdb","trakt","mojo_box_office","detailsData","rating","letterboxd","splice","mojoDetailsData","rank","editURL","url","replace","logoBody","rowData","className","alt","src","config","base_render","nameBody","link","href","target","ratingBody","maxRating","rankBody","role","aria-label","red","fill","Anchor","Link","focusShadow","AbsoluteFill","_templateObject3","OverflowHidden","_templateObject4","Image","img","_templateObject5","Overlay","_templateObject6","overlay","OverlayRatings","_templateObject7","HeartWrapper","button","_templateObject8","isFavorite","StyledHeart","Heart","_templateObject9","Info","_templateObject10","InfoRatings","_templateObject11","NoImage","_templateObject12","midGrey","FavoriteButton","toggle","useFavoriteState","onClick","filled","LoadMore","_templateObject13","_ref2","_props$allocine","_props$allocine2","_props$allocine3","_props$betaseries","_props$betaseries2","_props$imdb","_props$imdb2","_props$letterboxd","_props$letterboxd2","_props$mojo","_props$mojo2","_props$metacritic","_props$metacritic2","_props$metacritic3","_props$rotten_tomatoe","_props$rotten_tomatoe2","_props$rotten_tomatoe3","_props$senscritique","_props$senscritique2","_props$tmdb","_props$tmdb2","_props$trakt","_props$trakt2","loadMore","media_type","getKindURL","poster_path","profile_path","startsWith","getPlaceholder","height","placeholder","parseInt","allocine","users_rating","critics_rating","mojo","metacritic","rotten_tomatoes","ratings_average","localStorage","getItem","op","useRef","isMounted","setHeight","useState","setWidth","imgEl","current","clientHeight","clientWidth","to","tabIndex","ariaLabel","LazyImage","ref","Movie","TVShow","Person","display","alignItems","e","hide","show","toFixed","OverlayPanel","DataTable","Column","body","header","minWidth","field"],"mappings":"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","file":"static/js/8.666b248a.chunk.js","sourcesContent":["import React from \"react\";\nimport { useFetch } from \"react-hooks-fetch\";\nimport { getKindByURL } from \"utils/kind\";\nimport Card from \"./index\";\n\n/**\n * A component that fetches data from a given URL and renders a Card component with the fetched data.\n * @param {string} kindURL - The URL of the kind of data to fetch.\n * @param {string} id - The ID of the specific data to fetch.\n * @returns A Card component with the fetched data, or a loading or error component if the data is not yet available or an error occurred.\n */\nconst FetchCard = ({ kindURL, id }) => {\n  const { error, loading, data } = useFetch([`https://api.themoviedb.org/3/${getKindByURL(kindURL)}/${id}`, `?api_key=${process.env.REACT_APP_TMDB_KEY}`].join(\"\"));\n\n  if (loading) return <Card loading />;\n  if (error) return <Card error />;\n\n  return <Card id={id} kindURL={kindURL} {...data} />;\n};\n\nexport default FetchCard;\n","import React, { Fragment, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { Row, Cell } from \"griding\";\nimport { useFavorites } from \"utils/favorites\";\nimport Container from \"components/Container\";\nimport FetchCard from \"components/Card/FetchCard\";\nimport InfoScreen from \"components/InfoScreen\";\nimport Text from \"components/Text\";\nimport { HeartBreak } from \"components/Icon\";\n\nconst Wrapper = styled.div`\n\tflex: 1\n\tdisplay: flex;\n\tflex-direction: column;\n\ttransition: 0.2s all;\n`;\n\nconst getTitle = (length) => `${!length ? \"no favorites\" : `${length} ${length > 1 ? `favorites` : `favorite`}`}`;\n\n/**\n * A functional component that displays a list of favorite movies, tvshows, or people.\n * @returns A JSX element that displays the list of favorites.\n */\nconst SearchView = () => {\n  const [favoritesSet] = useFavorites();\n  const favorites = [...favoritesSet] || [];\n  useEffect(() => {\n    document.title = \"Movies - \" + getTitle(favorites.length);\n  }, [favorites.length]);\n\n  return (\n    <Wrapper>\n      <Container>\n        {!favorites.length ? (\n          <InfoScreen emoji={<HeartBreak size={96} style={{ margin: \"1rem\" }} />} title=\"You don't have any favorites yet\" description=\"you can add movies, tvshows or people to your favorites by clicking on the ♥ icon\" />\n        ) : (\n          <Fragment>\n            <Text weight={600} xs={2} sm={3} md={4} xg={5}>\n              {getTitle(favorites.length)}\n            </Text>\n            <Row vertical-gutter style={{ marginTop: \"2rem\", marginBottom: \"2rem\" }}>\n              {favorites.map((favorite) => (\n                <Cell key={favorite} xs={6} sm={4} md={3} xg={2}>\n                  <FetchCard kindURL={favorite?.split(\"/\")[0]} id={favorite?.split(\"/\")[1]} />\n                </Cell>\n              ))}\n            </Row>\n          </Fragment>\n        )}\n      </Container>\n    </Wrapper>\n  );\n};\n\nexport default SearchView;\n","import styled from \"styled-components\";\nimport { mapPropsBreakpoints } from \"utils/breakpoints\";\n\nconst Text = styled.div`\n  color: ${(p) => p.color || \"currentColor\"};\n  font-weight: ${(p) => p.weight};\n  ${(p) => mapPropsBreakpoints(p.theme.breakpoints, (x) => p.theme.typography[x])}\n`;\n\nText.defaultProps = { xs: 0 };\n\nexport default Text;\n","import { utility as above } from \"./above\";\n\n/**\n * Maps the breakpoints of a given object to a function that takes in the value of the breakpoint\n * and the original object of props.\n * @param {object} breakpoints - an object containing the breakpoints to map\n * @param {function} fn - the function to map the breakpoints to\n * @returns A function that takes in an object of props and returns an array of mapped breakpoints.\n */\nexport const mapPropsBreakpoints = (breakpoints, fn) => (props) =>\n  Object.keys(props)\n    .filter((prop) => Object.keys(breakpoints).includes(prop))\n    .map((label) => above(breakpoints)[label]`${fn(props[label], props)}`);\n","/**\n * Parses a value and returns a number if possible. If the value is not a number or a string,\n * returns 0. If the value is a string, it will attempt to parse it as a pixel or rem value.\n * @param {number|string} [value=0] - The value to parse.\n * @returns {number} - The parsed value as a number.\n */\nexport const parse = (value = 0) => {\n  const type = typeof value;\n  if (type === \"number\") return value;\n  if (type !== \"string\") return 0;\n  if (/^\\d+px/.test(value)) return parseFloat(value, 10);\n  if (/^\\d+rem/.test(value)) return parseFloat(value) * 16;\n  return value;\n};\n\nexport const stringify = (value = 0) => (!!parse(value) ? `${parse(value)}px` : value);\n","import { css } from \"styled-components\";\nimport { stringify, parse } from \"./pixels\";\n\nexport const utility = (breakpoints) =>\n  Object.keys(breakpoints).reduce((acc, label) => {\n    acc[label] = (...args) => css`\n      @media (min-width: ${stringify(parse(breakpoints[label].width))}) {\n        ${css(...args)}\n      }\n    `;\n    return acc;\n  }, {});\n\n/**\n * Returns a function that generates a CSS media query for screens above a certain width.\n * @param {string} label - The label for the breakpoint to target.\n * @returns A function that generates a CSS media query.\n */\nexport const above =\n  (label) =>\n  (...args) =>\n  ({ theme }) =>\n    css`\n      @media (min-width: ${stringify(parse(theme.breakpoints[label].width))}) {\n        ${css(...args)}\n      }\n    `;\n\nexport default above;\n","export const getTitleFromURL = (kind) => {\n  if (kind === \"movies\") return \"Movies\";\n  if (kind === \"multi\") return \"What's on?\";\n  if (kind === \"people\") return \"People\";\n  if (kind === \"search\") return \"Search\";\n  if (kind === \"tvshows\") return \"TV Shows\";\n  return \"Error\";\n};\n\nexport const getKindByURL = (input, source) => {\n  const tvshowValue = source === \"render\" ? \"tvshow\" : \"tv\";\n\n  if (input === \"movies\") return \"movie\";\n  if (input === \"people\") return \"person\";\n  if (input === \"tvshows\") return tvshowValue;\n  return \"multi\";\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Container from \"components/Container\";\nimport Text from \"components/Text\";\n\nconst Wrapper = styled(Container)`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  margin: 4rem auto;\n  text-align: center;\n  svg {\n    color: ${(p) => p.theme.colors.grey};\n  }\n`;\n\nconst Emoji = styled.div`\n  font-size: 3rem;\n  margin: 0.5em;\n`;\n\n/**\n * A component that displays information in a styled wrapper.\n * @param {string} emoji - The emoji to display in the component.\n * @param {string} title - The title to display in the component.\n * @param {string} description - The description to display in the component.\n * @param {object} props - Additional props to pass to the component.\n * @returns A styled wrapper component that displays the given information.\n */\nconst InfoScreen = ({ emoji, title, description, ...props }) => (\n  <Wrapper {...props}>\n    {emoji && <Emoji>{emoji}</Emoji>}\n    {title && (\n      <Text xs={1} md={2} weight={600} style={{ margin: \"1rem 0 0.5rem\" }}>\n        {title}\n      </Text>\n    )}\n    {description && <Text color={(p) => p.theme.colors.lightGrey}>{description}</Text>}\n  </Wrapper>\n);\n\nexport default InfoScreen;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Outer = styled.div`\n  height: 0;\n  overflow: hidden;\n  padding-top: ${(p) => `${(1 / p.ratio) * 100}%`};\n  position: relative;\n`;\n\nconst Inner = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n\n/**\n * A component that maintains a given aspect ratio for its children.\n * @param {number} [ratio=1] - The aspect ratio to maintain.\n * @param {ReactNode} children - The child elements to render.\n * @param {Object} props - Additional props to pass to the component.\n * @returns The component with the given aspect ratio and children.\n */\nconst AspectRatio = ({ ratio = 1, children, ...props }) => (\n  <Outer ratio={ratio} {...props}>\n    <Inner>{children}</Inner>\n  </Outer>\n);\n\nexport default AspectRatio;\n","import React from \"react\";\nimport config from \"./config\";\n\nexport const getRatingsDetails = (\n  allocine_critics_rating,\n  allocine_url,\n  allocine_users_rating,\n  betaseries_url,\n  betaseries_users_rating,\n  imdb_url,\n  imdb_users_rating,\n  letterboxd_url,\n  letterboxd_users_rating,\n  metacritic_critics_rating,\n  metacritic_url,\n  metacritic_users_rating,\n  rottenTomatoes_critics_rating,\n  rottenTomatoes_url,\n  rottenTomatoes_users_rating,\n  senscritique_url,\n  senscritique_users_rating,\n  tmdb_url,\n  tmdb_users_rating,\n  trakt_url,\n  trakt_users_rating,\n  mojo_rank,\n  mojo_url,\n  itemType,\n  kindURL\n) => {\n  const detailsConfig = {\n    allocine_users: {\n      image: \"allocine-logo.png\",\n      name: \"AlloCiné users\",\n    },\n    allocine_critics: {\n      image: \"allocine-logo.png\",\n      name: \"AlloCiné critics\",\n    },\n    betaseries: {\n      image: \"betaseries-logo.png\",\n      name: \"BetaSeries users\",\n    },\n    imdb: {\n      image: \"imdb-logo.png\",\n      name: \"IMDb users\",\n    },\n    metacritic_users: {\n      image: \"metacritic-logo.png\",\n      name: \"Metacritic users\",\n    },\n    metacritic_critics: {\n      image: \"metacritic-logo.png\",\n      name: \"Metacritic critics\",\n    },\n    rottenTomatoes_users: {\n      image: \"rotten-tomatoes-logo.png\",\n      name: \"Rotten Tomatoes users\",\n    },\n    rottenTomatoes_critics: {\n      image: \"rotten-tomatoes-logo.png\",\n      name: \"Rotten Tomatoes critics\",\n    },\n    senscritique: {\n      image: \"senscritique-logo.png\",\n      name: \"SensCritique users\",\n    },\n    tmdb: {\n      image: \"tmdb-logo.png\",\n      name: \"TMDB users\",\n    },\n    trakt: {\n      image: \"trakt-logo.png\",\n      name: \"Trakt users\",\n    },\n    mojo_box_office: {\n      image: \"mojo-logo.png\",\n      name: \"Mojo worldwide\",\n    },\n  };\n\n  const detailsData = [\n    {\n      image: detailsConfig.allocine_users.image,\n      name: detailsConfig.allocine_users.name,\n      rating: allocine_users_rating,\n    },\n    {\n      image: detailsConfig.allocine_critics.image,\n      name: detailsConfig.allocine_critics.name,\n      rating: allocine_critics_rating,\n    },\n    {\n      image: detailsConfig.betaseries.image,\n      name: detailsConfig.betaseries.name,\n      rating: betaseries_users_rating,\n    },\n    {\n      image: detailsConfig.imdb.image,\n      name: detailsConfig.imdb.name,\n      rating: imdb_users_rating,\n    },\n    {\n      image: detailsConfig.metacritic_users.image,\n      name: detailsConfig.metacritic_users.name,\n      rating: metacritic_users_rating,\n    },\n    {\n      image: detailsConfig.metacritic_critics.image,\n      name: detailsConfig.metacritic_critics.name,\n      rating: metacritic_critics_rating,\n    },\n    {\n      image: detailsConfig.rottenTomatoes_users.image,\n      name: detailsConfig.rottenTomatoes_users.name,\n      rating: rottenTomatoes_users_rating,\n    },\n    {\n      image: detailsConfig.rottenTomatoes_critics.image,\n      name: detailsConfig.rottenTomatoes_critics.name,\n      rating: rottenTomatoes_critics_rating,\n    },\n    {\n      image: detailsConfig.senscritique.image,\n      name: detailsConfig.senscritique.name,\n      rating: senscritique_users_rating,\n    },\n    {\n      image: detailsConfig.tmdb.image,\n      name: detailsConfig.tmdb.name,\n      rating: tmdb_users_rating,\n    },\n    {\n      image: detailsConfig.trakt.image,\n      name: detailsConfig.trakt.name,\n      rating: trakt_users_rating,\n    },\n  ];\n\n  if (itemType === \"movie\" || kindURL === \"movies\") {\n    detailsConfig.letterboxd = {\n      image: \"letterboxd-logo.png\",\n      name: \"Letterboxd users\",\n    };\n\n    detailsData.splice(4, 0, {\n      image: detailsConfig.letterboxd.image,\n      name: detailsConfig.letterboxd.name,\n      rating: letterboxd_users_rating,\n    });\n  }\n\n  const mojoDetailsData = [\n    {\n      image: detailsConfig.mojo_box_office.image,\n      name: detailsConfig.mojo_box_office.name,\n      rank: mojo_rank,\n    },\n  ];\n\n  const logoBody = (rowData) => {\n    const image = rowData.image;\n    const name = rowData.name;\n\n    return (\n      <div className=\"flex align-items-center p-overlaypanel-logo\">\n        <img alt={name} src={`${config.base_render}/${image}`} />\n      </div>\n    );\n  };\n\n  const ratingBody = (rowData) => {\n    const rating = rowData.rating;\n    let maxRating = 5;\n    if (rowData.name === \"IMDb users\" || rowData.name === \"Metacritic users\" || rowData.name === \"SensCritique users\" || rowData.name === \"TMDB users\") {\n      maxRating = 10;\n    } else if (rowData.name === \"Metacritic critics\" || rowData.name === \"Rotten Tomatoes users\" || rowData.name === \"Rotten Tomatoes critics\" || rowData.name === \"Trakt users\") {\n      maxRating = 100;\n    }\n\n    if (rating > 0)\n      return (\n        <span className=\"rating_value\">\n          <span>★</span> {rating}\n          <span>/{maxRating}</span>\n        </span>\n      );\n    return \"/\";\n  };\n\n  const rankBody = (rowData) => {\n    const rank = rowData.rank;\n\n    if (rank > 0) {\n      return (\n        <span className=\"rank_value\">\n          <span role=\"img\" aria-label=\"trophy\">\n            🏆\n          </span>{\" \"}\n          {rank}\n        </span>\n      );\n    }\n    return \"/\";\n  };\n\n  const editURL = (url) => {\n    const first_regex = /(_gen_cfilm=|_gen_cserie=)/;\n    const second_regex = /\\.html$/;\n\n    return url.replace(first_regex, \"-\").replace(second_regex, \"\");\n  };\n\n  const nameBody = (rowData) => {\n    const name = rowData.name;\n    const rating = rowData.rating;\n    const rank = rowData.rank;\n\n    let link;\n    if (name === \"AlloCiné users\" && rating > 0) {\n      link = (\n        <a href={`${editURL(allocine_url)}/critiques/`} target={\"_blank\"}>\n          {name}\n        </a>\n      );\n    } else if (name === \"AlloCiné critics\" && rating > 0) {\n      link = (\n        <a href={`${editURL(allocine_url)}/critiques/presse/`} target={\"_blank\"}>\n          {name}\n        </a>\n      );\n    } else if (name === \"BetaSeries users\" && rating > 0) {\n      link = (\n        <a href={betaseries_url} target={\"_blank\"}>\n          {name}\n        </a>\n      );\n    } else if (name === \"IMDb users\" && rating > 0) {\n      link = (\n        <a href={imdb_url} target={\"_blank\"}>\n          {name}\n        </a>\n      );\n    } else if (name === \"Letterboxd users\" && rating > 0) {\n      link = (\n        <a href={letterboxd_url} target={\"_blank\"}>\n          {name}\n        </a>\n      );\n    } else if (name === \"Metacritic users\" && rating > 0) {\n      link = (\n        <a href={`${metacritic_url}/user-reviews`} target={\"_blank\"}>\n          {name}\n        </a>\n      );\n    } else if (name === \"Metacritic critics\" && rating > 0) {\n      link = (\n        <a href={`${metacritic_url}/critic-reviews`} target={\"_blank\"}>\n          {name}\n        </a>\n      );\n    } else if (name === \"Rotten Tomatoes users\" && rating > 0) {\n      link = (\n        <a href={`${rottenTomatoes_url}`} target={\"_blank\"}>\n          {name}\n        </a>\n      );\n    } else if (name === \"Rotten Tomatoes critics\" && rating > 0) {\n      link = (\n        <a href={`${rottenTomatoes_url}`} target={\"_blank\"}>\n          {name}\n        </a>\n      );\n    } else if (name === \"SensCritique users\" && rating > 0) {\n      link = (\n        <a href={senscritique_url} target={\"_blank\"}>\n          {name}\n        </a>\n      );\n    } else if (name === \"TMDB users\" && rating > 0) {\n      link = (\n        <a href={tmdb_url} target={\"_blank\"}>\n          {name}\n        </a>\n      );\n    } else if (name === \"Trakt users\" && rating > 0) {\n      link = (\n        <a href={trakt_url} target={\"_blank\"}>\n          {name}\n        </a>\n      );\n    } else if (name === \"Mojo worldwide\" && rank > 0) {\n      link = (\n        <a href={`${mojo_url}`} target={\"_blank\"}>\n          {name}\n        </a>\n      );\n    } else {\n      link = name;\n    }\n\n    return <div className=\"flex align-items-center\">{link}</div>;\n  };\n\n  return {\n    detailsData,\n    mojoDetailsData,\n    logoBody,\n    nameBody,\n    ratingBody,\n    rankBody,\n  };\n};\n","import React, { useEffect, useRef, useState } from \"react\";\nimport styled from \"styled-components\";\nimport LazyImage from \"react-lazy-progressive-image\";\nimport { useFavoriteState } from \"utils/favorites\";\nimport Link from \"components/Link\";\nimport AspectRatio from \"components/AspectRatio\";\nimport Text from \"components/Text\";\nimport { Heart, Movie, Person, TVShow } from \"components/Icon\";\nimport { OverlayPanel } from \"primereact/overlaypanel\";\nimport { Column } from \"primereact/column\";\nimport { DataTable } from \"primereact/datatable\";\nimport { getRatingsDetails } from \"utils/getRatingsDetails\";\n\nconst Wrapper = styled.div`\n  background: none;\n  border: none;\n  margin: 0;\n  flex: 1;\n  display: flex;\n  position: relative;\n  background: ${(p) => (p.error ? p.theme.colors.red : p.theme.colors.grey)};\n  border-radius: 0.1875rem;\n  cursor: pointer;\n`;\n\nconst fill = `position: absolute; top: 0; bottom: 0; left: 0; right: 0;`;\n\nconst Anchor = styled(Link)`\n  appearance: none;\n  width: 100%;\n  color: currentColor;\n  display: block;\n  border-radius: 0.1875rem;\n  z-index: 1;\n  ${fill}\n  &:focus {\n    ${(p) => p.theme.focusShadow}\n  }\n`;\n\nconst AbsoluteFill = styled.div`\n  ${fill}\n  display: flex;\n  flex-direction: column-reverse;\n  justify-content: space-between;\n`;\n\nconst OverflowHidden = styled(AbsoluteFill)`\n  overflow: hidden;\n  border-radius: 0.1875rem;\n`;\n\nconst Image = styled.img`\n  display: block;\n  min-height: 100%;\n  object-fit: cover;\n  transition: 0.2s all;\n`;\n\nconst Overlay = styled.div`\n  width: 100%;\n  margin-top: auto;\n  display: flex;\n  flex-direction: column-reverse;\n  justify-content: space-between;\n  background: ${(p) => p.theme.colors.overlay};\n  box-shadow: 0 0.25rem 2rem 0 rgba(5, 10, 13, 0.3);\n  border-radius: 0 0 0.1875rem 0.1875rem;\n`;\n\nconst OverlayRatings = styled.div`\n  width: 100%;\n  margin-top: auto;\n  display: flex;\n  flex-direction: column-reverse;\n  justify-content: space-between;\n  background: none;\n  box-shadow: 0 0.25rem 2rem 0 rgba(5, 10, 13, 0.3);\n  border-radius: 0 0 0.1875rem 0.1875rem;\n  @media (hover: hover) {\n    border-radius: 0.1875rem;\n    height: 100%;\n    background: none;\n    box-shadow: none;\n  }\n  ${Wrapper}:hover &, ${Wrapper}:focus-within & {\n    background: none;\n    box-shadow: 0 0.25rem 2rem 0 rgba(5, 10, 13, 0.3);\n  }\n`;\n\nconst HeartWrapper = styled.button`\n  background: none;\n  border: none;\n  margin: 0;\n  color: currentColor;\n  top: 0;\n  right: 0;\n  left: auto;\n  padding: 0.75rem;\n  cursor: pointer;\n  z-index: 1;\n  position: absolute;\n  @media (hover: hover) {\n    margin-left: auto;\n    opacity: ${(p) => (p.isFavorite ? 1 : 0)};\n  }\n  ${Wrapper}:hover &, ${Wrapper}:focus-within & {\n    opacity: 1;\n  }\n`;\n\nconst StyledHeart = styled(Heart)`\n  transition: 0.2s all;\n  ${HeartWrapper}:focus &, ${HeartWrapper}:hover & {\n    color: ${(p) => p.theme.colors.red};\n  }\n`;\n\nconst Info = styled.div`\n  color: currentColor;\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n  position: relative;\n  padding: 0.75rem;\n  cursor: pointer;\n  overflow: hidden;\n  opacity: 1;\n`;\n\nconst InfoRatings = styled.div`\n  color: currentColor;\n  position: absolute;\n  top: 0;\n  padding: 0.75rem;\n  background: #181818;\n  border-radius: 24px;\n  margin: 0.6rem;\n  padding: 5px;\n  width: 60px;\n  text-align: center;\n  font-weight: bold;\n`;\n\nconst NoImage = styled.div`\n  ${fill}\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  color: ${(p) => p.theme.colors.midGrey};\n`;\n\nconst FavoriteButton = ({ kindURL, id, title }) => {\n  const [isFavorite, { toggle }] = useFavoriteState(kindURL + \"/\" + id);\n  return (\n    // eslint-disable-next-line no-sequences\n    <HeartWrapper isFavorite={isFavorite} onClick={toggle} aria-label={`favorite: ${title}`}>\n      <StyledHeart filled={isFavorite} />\n    </HeartWrapper>\n  );\n};\n\nconst LoadMore = styled(Text)`\n  text-align: center;\n  height: 100%;\n  margin: auto;\n  ${Wrapper}:hover & {\n    color: ${(p) => p.theme.colors.lightGrey};\n  }\n`;\n\nconst getKindURL = (input) => {\n  if (input === \"movie\") return \"movies\";\n  if (input === \"tv\") return \"tvshows\";\n  if (input === \"person\") return \"people\";\n  return input;\n};\n\n/**\n * A functional component that renders a card with information about a movie, tvshow, or person.\n * @param {object} props - The props object containing information about the card.\n * @param {string} props.id - The ID of the movie, tvshow, or person.\n * @param {boolean} props.loading - A boolean indicating whether the card is currently loading.\n * @param {boolean} props.error - A boolean indicating whether there was an error loading the card.\n * @param {boolean} props.loadMore - A boolean indicating whether the card should display a \"Load More\" button.\n * @param {string} props.media_type - The type of media (movie, tvshow, or person).\n * @param\n */\nconst Card = ({ id, loading, error, loadMore, ...props }) => {\n  const kind = props?.media_type;\n  const kindURL = getKindURL(props?.media_type) || props.kindURL;\n\n  const title = props?.title || props?.name;\n\n  let image = props?.poster_path || props?.profile_path || props?.image;\n  if (image && image.startsWith(\"/\")) {\n    image = `https://image.tmdb.org/t/p/w300${image}`;\n  }\n\n  const getPlaceholder = (image, width, height) => {\n    const compression = 2;\n    let placeholder = `${image.split(\"net\")[0]}net/c_${parseInt(width * compression)}_${parseInt(height * compression)}${image.split(\"net\")[1]}`;\n    if (image && image.startsWith(\"https://image.tmdb.org\")) placeholder = `https://image.tmdb.org/t/p/w300${image}`;\n    return placeholder;\n  };\n\n  const allocine_url = props?.allocine?.url;\n  const allocine_users_rating = props?.allocine?.users_rating;\n  const allocine_critics_rating = props?.allocine?.critics_rating;\n\n  const betaseries_url = props?.betaseries?.url;\n  const betaseries_users_rating = props?.betaseries?.users_rating;\n\n  const imdb_url = props?.imdb?.url;\n  const imdb_users_rating = props?.imdb?.users_rating;\n\n  const letterboxd_url = props?.letterboxd?.url;\n  const letterboxd_users_rating = props?.letterboxd?.users_rating;\n\n  const mojo_rank = props?.mojo?.rank;\n  const mojo_url = props?.mojo?.url;\n\n  const metacritic_url = props?.metacritic?.url;\n  const metacritic_users_rating = props?.metacritic?.users_rating;\n  const metacritic_critics_rating = props?.metacritic?.critics_rating;\n\n  const rottenTomatoes_url = props?.rotten_tomatoes?.url;\n  const rottenTomatoes_users_rating = props?.rotten_tomatoes?.users_rating;\n  const rottenTomatoes_critics_rating = props?.rotten_tomatoes?.critics_rating;\n\n  const senscritique_url = props?.senscritique?.url;\n  const senscritique_users_rating = props?.senscritique?.users_rating;\n\n  const tmdb_url = props?.tmdb?.url;\n  const tmdb_users_rating = props?.tmdb?.users_rating;\n\n  const trakt_url = props?.trakt?.url;\n  const trakt_users_rating = props?.trakt?.users_rating;\n\n  const ratings_average = props?.ratings_average;\n\n  const itemType = localStorage.getItem(\"item_type\") ? localStorage.getItem(\"item_type\") : \"movie\";\n\n  const { detailsData, mojoDetailsData, logoBody, nameBody, ratingBody, rankBody } = getRatingsDetails(\n    allocine_critics_rating,\n    allocine_url,\n    allocine_users_rating,\n    betaseries_url,\n    betaseries_users_rating,\n    imdb_url,\n    imdb_users_rating,\n    letterboxd_url,\n    letterboxd_users_rating,\n    metacritic_critics_rating,\n    metacritic_url,\n    metacritic_users_rating,\n    rottenTomatoes_critics_rating,\n    rottenTomatoes_url,\n    rottenTomatoes_users_rating,\n    senscritique_url,\n    senscritique_users_rating,\n    tmdb_url,\n    tmdb_users_rating,\n    trakt_url,\n    trakt_users_rating,\n    mojo_rank,\n    mojo_url,\n    itemType,\n    kindURL\n  );\n\n  const op = useRef(null);\n  const isMounted = useRef(false);\n\n  const displayRatingsDetails = (e) => {\n    if (isMounted.current && detailsData) {\n      op.current.hide(e);\n      isMounted.current = false;\n    } else {\n      op.current.show(e);\n      isMounted.current = true;\n    }\n  };\n\n  const [height, setHeight] = useState(750);\n  const [width, setWidth] = useState(500);\n  const imgEl = useRef(null);\n\n  useEffect(() => {\n    if (imgEl.current) {\n      setHeight(imgEl.current.clientHeight);\n      setWidth(imgEl.current.clientWidth);\n    }\n  }, [imgEl]);\n\n  return (\n    <Wrapper error={error} {...props}>\n      <AspectRatio ratio={0.75} />\n      {!(loading || error || loadMore) && <Anchor to={`/${kindURL}/${id}`} tabIndex={0} ariaLabel={`poster for: ${title}`} />}\n      <OverflowHidden>\n        {image && (\n          <LazyImage placeholder={getPlaceholder(image, width, height)} src={getPlaceholder(image, width, height)}>\n            {(src, loading) => <Image ref={imgEl} src={src} alt={`poster for: ${title}`} height={height} width={width} loading={+loading} />}\n          </LazyImage>\n        )}\n      </OverflowHidden>\n      {loadMore && (\n        <LoadMore xs={1} weight={500} color={(p) => p.theme.colors.midGrey}>\n          Load\n          <br />\n          More\n        </LoadMore>\n      )}\n      <AbsoluteFill>\n        {!image && !loading && !loadMore && (\n          <NoImage>\n            {kind === \"movie\" && <Movie />}\n            {kind === \"tvshow\" && <TVShow />}\n            {kind === \"person\" && <Person />}\n          </NoImage>\n        )}\n        {!loadMore && (\n          <Overlay>\n            {title && (\n              <Info>\n                <Text xs={0} sm={1} weight={500} style={{ marginBottom: \"0.25em\" }}>\n                  {title}\n                </Text>\n              </Info>\n            )}\n            <div style={{ display: \"flex\", alignItems: \"center\" }}>{id && <FavoriteButton kindURL={kindURL} id={id} title={title} />}</div>\n          </Overlay>\n        )}\n        {!loadMore && (\n          <OverlayRatings>\n            {ratings_average > 0 && (\n              <InfoRatings className=\"rating_details\" onClick={displayRatingsDetails}>\n                <span style={{ color: \"#28A745\" }}>★</span> {ratings_average.toFixed(1)}\n                <OverlayPanel ref={op}>\n                  <DataTable value={detailsData} size=\"small\">\n                    <Column body={logoBody} />\n                    <Column header=\"Name\" body={nameBody} style={{ minWidth: \"11rem\" }} />\n                    <Column field=\"rating\" header=\"Rating\" body={ratingBody} />\n                  </DataTable>\n                  {itemType === \"movie\" && (\n                    <DataTable value={mojoDetailsData} size=\"small\">\n                      <Column body={logoBody} />\n                      <Column header=\"-\" body={nameBody} style={{ minWidth: \"11rem\" }} />\n                      <Column field=\"rank\" header=\"Rank\" body={rankBody} />\n                    </DataTable>\n                  )}\n                </OverlayPanel>\n              </InfoRatings>\n            )}\n          </OverlayRatings>\n        )}\n      </AbsoluteFill>\n    </Wrapper>\n  );\n};\n\nexport default Card;\n"],"sourceRoot":""}